//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.InterfacesPkg
{
    [Serializable]
    public class TriggerSensorMsg : Message
    {
        public const string k_RosMessageName = "interfaces_pkg/TriggerSensor";
        public override string RosMessageName => k_RosMessageName;

        public bool has_triggered;
        public bool has_timer_finished;
        public float timer_count;
        public float max_timer_count;

        public TriggerSensorMsg()
        {
            this.has_triggered = false;
            this.has_timer_finished = false;
            this.timer_count = 0.0f;
            this.max_timer_count = 0.0f;
        }

        public TriggerSensorMsg(bool has_triggered, bool has_timer_finished, float timer_count, float max_timer_count)
        {
            this.has_triggered = has_triggered;
            this.has_timer_finished = has_timer_finished;
            this.timer_count = timer_count;
            this.max_timer_count = max_timer_count;
        }

        public static TriggerSensorMsg Deserialize(MessageDeserializer deserializer) => new TriggerSensorMsg(deserializer);

        private TriggerSensorMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.has_triggered);
            deserializer.Read(out this.has_timer_finished);
            deserializer.Read(out this.timer_count);
            deserializer.Read(out this.max_timer_count);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.has_triggered);
            serializer.Write(this.has_timer_finished);
            serializer.Write(this.timer_count);
            serializer.Write(this.max_timer_count);
        }

        public override string ToString()
        {
            return "TriggerSensorMsg: " +
            "\nhas_triggered: " + has_triggered.ToString() +
            "\nhas_timer_finished: " + has_timer_finished.ToString() +
            "\ntimer_count: " + timer_count.ToString() +
            "\nmax_timer_count: " + max_timer_count.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
